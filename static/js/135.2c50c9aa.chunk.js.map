{"version":3,"file":"static/js/135.2c50c9aa.chunk.js","mappings":"4JAiBA,IAfe,WACb,OACE,SAAC,KAAD,CACEA,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,SAAS,EACTC,iBAAiB,UACjBC,iBAAiB,UACjBC,SAAS,UACTC,UAAU,4BAGf,C,gKCdD,GAAgB,cAAgB,oCAAoC,UAAY,gCAAgC,MAAQ,4BAA4B,KAAO,2BAA2B,QAAU,8BAA8B,QAAU,8BAA8B,cAAgB,qC,SC4EtR,EAtEqB,WAAO,IAAD,IACzB,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEjCC,GAAaC,EAAAA,EAAAA,MAAbD,SAiBR,IAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACET,EAAS,IADX,mBAG8BU,EAAAA,EAAAA,IAAgBH,GAH9C,OAGUI,EAHV,OAIIb,EAAQa,GAJZ,gDAMIX,EAAS,wBANb,yBAQIE,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdU,EACD,GAAE,CAACL,IAEAN,EAAW,OAAO,SAACY,EAAA,EAAD,IAEtB,IAAKhB,EAAM,OAAO,oDAElB,IAAQiB,EAAgEjB,EAAhEiB,eAAgBC,EAAgDlB,EAAhDkB,aAAcC,EAAkCnB,EAAlCmB,SAAUC,EAAwBpB,EAAxBoB,YAAaC,EAAWrB,EAAXqB,OAE7D,OACE,+BACE,qBAASC,UAAWC,EAAAA,cAApB,WACE,SAAC,KAAD,CAAMC,GAAIlB,EAAUgB,UAAWC,EAAAA,QAA/B,sBAGA,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,gBAAKE,IAAKL,EAAaE,UAAWC,EAAAA,MAAWG,IAAI,YACjD,iBAAKJ,UAAWC,EAAAA,SAAhB,WACE,eAAID,UAAWC,EAAAA,KAAf,SAA0BN,KAC1B,eAAGK,UAAWC,EAAAA,KAAd,yBAAqCL,EAArC,QACA,eAAII,UAAWC,EAAAA,KAAf,uBACA,cAAGD,UAAWC,EAAAA,KAAd,SAAyBJ,KACzB,eAAIG,UAAWC,EAAAA,KAAf,qBACA,cAAGD,UAAWC,EAAAA,KAAd,SAAyBF,WAG7B,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,SAAC,KAAD,CACEC,GAAI,OACJhB,MAAO,CAAEC,KAAMH,GACfgB,UAAWC,EAAAA,cAHb,mBAOA,SAAC,KAAD,CACEC,GAAI,UACJhB,MAAO,CAAEC,KAAMH,GACfgB,UAAWC,EAAAA,cAHb,wBAQDrB,IAAS,uBAAIA,KACd,SAAC,KAAD,QAIP,C,qOCpEM,SAAeyB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAU,wBAD5B,uBACGC,EADH,EACGA,KADH,kBAEEA,EAAKC,QAAQC,KAAI,SAAAC,GACtB,MAAO,CACLf,eAAgBe,EAAGf,eACnBgB,GAAID,EAAGC,GACPb,YAAac,EAAeF,EAAGZ,aAC/BF,aAAciB,EAAmBH,EAAGd,cAEvC,KATI,kEAWA,SAAeL,EAAtB,+CAAO,OAAP,oBAAO,WAA+BuB,GAA/B,mGACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,IADtC,uBACGP,EADH,EACGA,KACAZ,EAAgEY,EAAhEZ,eAAgBC,EAAgDW,EAAhDX,aAAcC,EAAkCU,EAAlCV,SAAUC,EAAwBS,EAAxBT,YAAaC,EAAWQ,EAAXR,OAFxD,kBAGE,CACLJ,eAAAA,EACAC,aAAciB,EAAmBjB,GACjCC,SAAAA,EACAC,YAAac,EAAed,GAC5BC,OAAQgB,EAAehB,KARpB,kEAWA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BF,GAA3B,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADlB,uBACGP,EADH,EACGA,KADH,kBAEEA,EAAKU,MAFP,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADlB,uBACGP,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAIA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBd,EAAAA,EAAAA,IAAA,gBAA2B,CAChDe,OAAQ,CACND,MAAAA,KAHC,uBACGb,EADH,EACGA,KADH,kBAMEA,EAAKC,QAAQC,KAAI,SAAAC,GACtB,MAAO,CACLf,eAAgBe,EAAGf,eACnBgB,GAAID,EAAGC,GACPb,YAAac,EAAeF,EAAGZ,aAC/BF,aAAciB,EAAmBH,EAAGd,cAEvC,KAbI,kEAjCPU,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEgB,QAFV,oCAkDT,IAAMV,EAAiB,SAAAW,GAC5B,OAAOA,EAAG,yCAAqCA,GAAQC,CACxD,EAEYT,EAAiB,SAAAhB,GAC5B,GAAKA,EACL,OAAOA,EACJU,KAAI,SAAAgB,GACH,OAAOA,EAAMC,KAAO,GACrB,IACAC,KAAK,IACT,EAEKd,EAAqB,SAAAjB,GACzB,OAAOgC,KAAKC,MAAqB,GAAfjC,EACnB,C","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { CirclesWithBar } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <CirclesWithBar\n      height=\"100\"\n      width=\"100\"\n      color=\"#077728\"\n      visible={true}\n      outerCircleColor=\"#094677\"\n      innerCircleColor=\"#c0119a\"\n      barColor=\"#bbce0b\"\n      ariaLabel=\"circles-with-bar-loading\"\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesSection\":\"MovieDetails_moviesSection__Ah76I\",\"container\":\"MovieDetails_container__Ys+c9\",\"image\":\"MovieDetails_image__c1FeV\",\"text\":\"MovieDetails_text__RHcc4\",\"backBtn\":\"MovieDetails_backBtn__rLQ3F\",\"addInfo\":\"MovieDetails_addInfo__lKFr+\",\"addInfo__link\":\"MovieDetails_addInfo__link__Uv8Ah\"};","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport Loader from 'components/Loader/Loader';\nimport { getMovieDetails } from 'services/api';\nimport css from '../MovieDetails/MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      setError('');\n      try {\n        const filmDetails = await getMovieDetails(moviesId);\n        setFilm(filmDetails);\n      } catch (error) {\n        setError('something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [moviesId]);\n\n  if (isLoading) return <Loader />;\n\n  if (!film) return <div>Movie detail not found</div>;\n\n  const { original_title, vote_average, overview, poster_path, genres } = film;\n\n  return (\n    <>\n      <section className={css.moviesSection}>\n        <Link to={backLink} className={css.backBtn}>\n          Go back\n        </Link>\n        <div className={css.container}>\n          <img src={poster_path} className={css.image} alt=\"poster\" />\n          <div className={css.filmData}>\n            <h2 className={css.text}>{original_title}</h2>\n            <p className={css.text}>User score: {vote_average}%</p>\n            <h3 className={css.text}>Overwiew</h3>\n            <p className={css.text}>{overview}</p>\n            <h3 className={css.text}>Genres</h3>\n            <p className={css.text}>{genres}</p>\n          </div>\n        </div>\n        <div className={css.addInfo}>\n          <Link\n            to={'cast'}\n            state={{ from: backLink }}\n            className={css.addInfo__link}\n          >\n            Cast\n          </Link>\n          <Link\n            to={'reviews'}\n            state={{ from: backLink }}\n            className={css.addInfo__link}\n          >\n            Reviews\n          </Link>\n        </div>\n        {error && <p>{error}</p>}\n        <Outlet />\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport noImage from '../assets/images/noImage.jpeg';\n\nconst API_KEY = '13b039c8ea964a53c22455b956eb62e0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTrendingFilms() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data.results.map(el => {\n    return {\n      original_title: el.original_title,\n      id: el.id,\n      poster_path: poster_pathUrl(el.poster_path),\n      vote_average: voteAveragePercent(el.vote_average),\n    };\n  });\n}\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  const { original_title, vote_average, overview, poster_path, genres } = data;\n  return {\n    original_title,\n    vote_average: voteAveragePercent(vote_average),\n    overview,\n    poster_path: poster_pathUrl(poster_path),\n    genres: getMovieGenres(genres),\n  };\n}\nexport async function getCastInfo(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n}\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n}\nexport async function getMovieByQuery(query) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data.results.map(el => {\n    return {\n      original_title: el.original_title,\n      id: el.id,\n      poster_path: poster_pathUrl(el.poster_path),\n      vote_average: voteAveragePercent(el.vote_average),\n    };\n  });\n}\n\nexport const poster_pathUrl = url => {\n  return url ? `https://image.tmdb.org/t/p/w500${url}` : noImage;\n};\n\nexport const getMovieGenres = genres => {\n  if (!genres) return;\n  return genres\n    .map(genre => {\n      return genre.name + ',';\n    })\n    .join(' ');\n};\n\nconst voteAveragePercent = vote_average => {\n  return Math.round(vote_average * 10);\n};\n"],"names":["height","width","color","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","useState","film","setFilm","error","setError","isLoading","setIsLoading","backLink","useLocation","state","from","moviesId","useParams","useEffect","getMovieDetails","filmDetails","fetchMovie","Loader","original_title","vote_average","overview","poster_path","genres","className","css","to","src","alt","getTrendingFilms","axios","data","results","map","el","id","poster_pathUrl","voteAveragePercent","movieId","getMovieGenres","getCastInfo","cast","getReviews","getMovieByQuery","query","params","api_key","url","noImage","genre","name","join","Math","round"],"sourceRoot":""}